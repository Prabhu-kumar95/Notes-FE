{"version":3,"sources":["components/Login.js","components/notes/Nav.js","components/notes/Home.js","components/notes/CreateNote.js","components/notes/EditNote.js","components/Notes.js","App.js","serviceWorker.js","index.js"],"names":["Login","setIsLogin","useState","name","email","password","user","setUser","err","setErr","onChangeInput","e","target","value","registerSubmit","a","preventDefault","axios","post","username","res","data","msg","response","loginSubmit","localStorage","setItem","token","onLogin","setOnLogin","style","visibility","opacity","className","onSubmit","type","id","placeholder","required","onChange","autoComplete","onClick","Nav","search","setSearch","htmlFor","to","clear","Home","notes","setNotes","setToken","getNotes","get","headers","Authorization","useEffect","getItem","deleteNote","delete","window","location","href","map","note","key","_id","title","content","format","date","CreateNote","setNote","history","useHistory","createNote","newNote","push","rows","EditNote","match","params","Date","toLocaleDateString","getNote","editNote","put","Notes","path","component","exact","App","isLogin","verified","console","log","checkLogin","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.037d723e.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport axios from 'axios';\n\nexport default function Login({setIsLogin}) {\n    const [user, setUser] = useState({name: '',email: '',password: '' })\n    const [err, setErr] = useState('')\n\n    const onChangeInput = e =>{\n        const {name, value} = e.target;\n        setUser({...user, [name]:value})\n        setErr('')\n    }\n\n    const registerSubmit = async e =>{\n        e.preventDefault()\n        try {\n            const res = await axios.post('/users/register',{\n                username: user.name,\n                email: user.email,\n                password: user.password\n            })\n            setUser({name: '', email: '', password: ''})\n            setErr(res.data.msg)\n        } catch (err) {\n            err.response.data.msg && setErr(err.response.data.msg)\n        }\n    }\n\n    const loginSubmit = async e =>{\n        e.preventDefault()\n        try {\n            const res = await axios.post('/users/login',{\n                email: user.email,\n                password: user.password\n            })\n            setUser({name: '', email: '', password: ''})\n            localStorage.setItem('tokenStore', res.data.token)\n            setIsLogin(true)\n        } catch (err) {\n            err.response.data.msg && setErr(err.response.data.msg)\n        }\n    }\n\n    const [onLogin, setOnLogin] = useState(false)\n    const style = {\n        visibility: onLogin ? \"visible\" : \"hidden\",\n        opacity: onLogin ? 1 : 0\n    }\n\n    return (\n       <section className=\"login-page\">\n        <h1 className='quote'>Make a Notes Everything & Don't Miss Anything...</h1>\n           <div className=\"login create-note\">\n                <h2>Login</h2>\n                <form onSubmit={loginSubmit}>\n                    <input type=\"email\" name=\"email\" id=\"login-email\"\n                    placeholder=\"Email\" required value={user.email}\n                    onChange={onChangeInput} />\n\n                    <input type=\"password\" name=\"password\" id=\"login-password\"\n                    placeholder=\"Password\" required value={user.password}\n                    autoComplete=\"true\"\n                    onChange={onChangeInput} />\n\n                    <button type=\"submit\">Login</button>\n                    <p>You don't have an account?\n                        <span onClick={() => setOnLogin(true)}> Register Now</span>\n                    </p>\n                    <h3>{err}</h3>\n                </form>\n           </div>\n           <div className=\"register create-note\" style={style}>\n           <h2>Register</h2>\n                <form onSubmit={registerSubmit}>\n                    <input type=\"text\" name=\"name\" id=\"register-name\"\n                    placeholder=\"User Name\" required value={user.name}\n                    onChange={onChangeInput} />\n\n                    <input type=\"email\" name=\"email\" id=\"register-email\"\n                    placeholder=\"Email\" required value={user.email}\n                    onChange={onChangeInput} />\n\n                    <input type=\"password\" name=\"password\" id=\"register-password\"\n                    placeholder=\"Password\" required value={user.password}\n                    autoComplete=\"true\" onChange={onChangeInput} />\n\n                    <button type=\"submit\">Register</button>\n                    <p>You have an account?\n                        <span onClick={() => setOnLogin(false)}> Login Now</span>\n                    </p>\n                    <h3>{err}</h3>\n                </form>\n           </div>\n       </section>\n    )\n}\n","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport \"../Header/Nav.css\";\nimport { useState } from 'react';\nexport default function Nav({setIsLogin}) {\n    let [search, setSearch ] = useState();\n    const logoutSubmit = () =>{\n        localStorage.clear()\n        setIsLogin(false)\n    }\n\n    return (\n        <nav className=\"Nav\">\n            <h1 className='logoheading'>\n        Notes\n        <span>Manager</span>{\" \"}\n      </h1>\n        \n        <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\n          <input\n            type=\"text\"\n            id=\"search\"\n            placeholder=\"Search by Title/Description\"\n            value={search}\n            onChange={(e) => setSearch(e.target.value)}\n          />\n          <label htmlFor=\"search\">Search Notes</label>\n        </form>\n        <ul>\n          <li>\n            <Link to=\"/\">All-Notes</Link>\n          </li>\n          <li>\n            <Link to=\"/create\">Add New Notes</Link>\n          </li>\n          <li  onClick={logoutSubmit}>\n            <Link to=\"/\">Logout</Link>\n          </li>\n         \n        </ul>\n      </nav>\n    )\n}\n\n","import React, {useState, useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {format} from 'timeago.js'\nimport axios from 'axios'\n\nexport default function Home() {\n    const [notes, setNotes] = useState([])\n    const [token, setToken] = useState('')\n\n    const getNotes = async (token) =>{\n        const res = await axios.get('api/notes', {\n            headers:{Authorization: token}\n        })\n        setNotes(res.data)\n    }\n\n    useEffect(() =>{\n        const token = localStorage.getItem('tokenStore')\n        setToken(token)\n        if(token){\n            getNotes(token)\n        }\n    }, [])\n\n    const deleteNote = async (id) =>{\n        try {\n            if(token){\n                await axios.delete(`api/notes/${id}`, {\n                    headers: {Authorization: token}\n                })\n                getNotes(token)\n            }\n        } catch (error) {\n            window.location.href = \"/\";\n        }\n    }\n\n    return (\n        <div className=\"note-wrapper\">\n            {\n                notes.map(note =>(\n                    <div className=\"card\" key={note._id}>\n                        <h4 title={note.title}>{note.title}</h4>\n                        <div className=\"text-wrapper\">\n                            <p>{note.content}</p>\n                        </div>\n                        <p className=\"date\">{format(note.date)}</p>\n                        <div className=\"card-footer\">\n                            {note.name}\n                            <Link to={`edit/${note._id}`} >Edit</Link>\n                        </div>\n                        <button className=\"close\" \n                        onClick={() => deleteNote(note._id)} >X</button>\n                    </div>\n                ))\n            }\n            \n        </div>\n    )\n}\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\n\nexport default function CreateNote() {\n    const [note, setNote] = useState({\n        title: '',\n        content: '',\n        date: ''\n    })\n    const history = useHistory()\n\n    const onChangeInput = e => {\n        const {name, value} = e.target;\n        setNote({...note, [name]:value})\n    }\n\n\n    const createNote = async e => {\n        e.preventDefault()\n        try {\n            const token = localStorage.getItem('tokenStore')\n            if(token){\n                const {title, content, date} = note;\n                const newNote = {\n                    title, content, date\n                }\n\n                await axios.post('/api/notes', newNote, {\n                    headers: {Authorization: token}\n                })\n                \n                return history.push('/')\n            }\n        } catch (err) {\n            window.location.href = \"/\";\n        }\n    }\n\n    return (\n        <div className=\"create-note\">\n            <h2>Create Note</h2>\n            <form onSubmit={createNote} autoComplete=\"off\">\n                <div className=\"row\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" value={note.title} id=\"title\"\n                    name=\"title\" required onChange={onChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"content\">Content</label>\n                    <textarea type=\"text\" value={note.content} id=\"content\"\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\n                </div>\n\n\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {useHistory} from 'react-router-dom'\n\nexport default function EditNote({match}) {\n    const [note, setNote] = useState({\n        title: '',\n        content: '',\n        date: '',\n        id: ''\n    })\n    const history = useHistory()\n\n    useEffect(() =>{\n        const getNote = async () =>{\n            const token = localStorage.getItem('tokenStore')\n            if(match.params.id){\n                const res = await axios.get(`/api/notes/${match.params.id}`, {\n                    headers: {Authorization: token}\n                })\n                setNote({\n                    title: res.data.title,\n                    content: res.data.content,\n                    date: new Date(res.data.date).toLocaleDateString(),\n                    id: res.data._id\n                })\n            }\n        }\n        getNote()\n    },[match.params.id])\n\n    const onChangeInput = e => {\n        const {name, value} = e.target;\n        setNote({...note, [name]:value})\n    }\n\n\n    const editNote = async e => {\n        e.preventDefault()\n        try {\n            const token = localStorage.getItem('tokenStore')\n            if(token){\n                const {title, content, date, id} = note;\n                const newNote = {\n                    title, content, date\n                }\n\n                await axios.put(`/api/notes/${id}`, newNote, {\n                    headers: {Authorization: token}\n                })\n                \n                return history.push('/')\n            }\n        } catch (err) {\n            window.location.href = \"/\";\n        }\n    }\n\n    return (\n        <div className=\"create-note\">\n            <h2>Edit Note</h2>\n            <form onSubmit={editNote} autoComplete=\"off\">\n                <div className=\"row\">\n                    <label htmlFor=\"title\">Title</label>\n                    <input type=\"text\" value={note.title} id=\"title\"\n                    name=\"title\" required onChange={onChangeInput} />\n                </div>\n\n                <div className=\"row\">\n                    <label htmlFor=\"content\">Content</label>\n                    <textarea type=\"text\" value={note.content} id=\"content\"\n                    name=\"content\" required rows=\"10\" onChange={onChangeInput} />\n                </div>\n\n                <button type=\"submit\">Save</button>\n            </form>\n        </div>\n    )\n}\n","import React from 'react'\nimport Header from './notes/Nav'\nimport Home from './notes/Home'\nimport CreateNote from './notes/CreateNote'\nimport EditNote from './notes/EditNote'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nexport default function Notes({setIsLogin}) {\n    return (\n        <Router>\n        <div className=\"notes-page\">\n            <Header setIsLogin={setIsLogin} />\n            <section>\n                <Route path=\"/\" component={Home} exact />\n                <Route path=\"/create\" component={CreateNote} exact />\n                <Route path=\"/edit/:id\" component={EditNote} exact />\n            </section>\n            \n        </div>\n        </Router>\n    )\n}\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios'\nimport Login from './components/Login'\nimport Notes from './components/Notes'\n\n\nfunction App() {\n  const [isLogin, setIsLogin] = useState(false)\n\n  useEffect(() =>{\n    const checkLogin = async () =>{\n      const token = localStorage.getItem('tokenStore')\n      if(token){\n        const verified = await axios.get('/users/verify',{\n          headers:{ Authorization: token}\n        })\n        console.log(verified)\n        setIsLogin(verified.data)\n        if(verified.data === false) return localStorage.clear()\n      }else{\n        setIsLogin(false)\n      }\n    }\n    checkLogin()\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {\n        isLogin \n        \n        ? <Notes setIsLogin={setIsLogin} /> \n        : <Login setIsLogin={setIsLogin} />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}